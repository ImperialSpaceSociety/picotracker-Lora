/* generated by Medad Newman 27/12/19
	The following coordinates are autogenerated from a kml file containing all the polygons.
*/

#ifndef GEOFENCE_H
#define GEOFENCE_H


#include "stdint.h"


/* These are the fence polygons. There are several 
 * polygons that have the same frequency names but have a 
 * number after: EU863870_1F e.g to make them a distinct polygon 
 * Code is auto generated with python script.
 */

// GEOFENCE ARRAYS (longitude, latitude)
static float EU863870_1F[60] = { 
-45.72874,84.00380,
-71.73155,78.30851,
-65.01903,72.29740,
-45.24218,53.93412,
-34.54649,49.34689,
-40.99227,34.94469,
-38.17881,29.80501,
-33.87627,24.50454,
-26.20223,10.61910,
-19.21780,11.51959,
-16.64609,23.54362,
-5.93428,35.67314,
0.16700,37.16337,
6.51814,38.26084,
12.94415,34.40801,
20.61028,33.10373,
33.84811,31.69631,
36.36444,35.49177,
44.24903,29.96465,
56.10139,25.52359,
61.12226,33.48713,
67.99503,38.07583,
94.15947,53.27269,
113.43923,49.52736,
120.49773,54.23578,
137.14185,48.09008,
154.04971,45.08742,
177.56839,70.10984,
98.65722,75.33447,
-45.72874,84.00380,

};

static float EU863870_2F[36] = { 
10.37222,-4.86862,
6.37369,-16.48638,
6.23787,-23.43953,
8.70511,-30.44255,
18.75909,-37.71921,
35.54449,-38.02720,
70.40569,-22.92416,
65.22884,-3.14600,
56.35515,3.56896,
47.12265,4.36719,
35.38113,5.86686,
28.49078,5.15862,
23.25866,5.82684,
19.12398,5.57047,
18.28441,1.88650,
15.60050,-2.06528,
14.89722,-2.81094,
10.37222,-4.86862,

};

static float EU863870_3F[12] = { 
50.44803,26.34159,
50.34092,26.03351,
50.54142,25.70977,
50.73643,26.01623,
50.71603,26.35878,
50.44803,26.34159,

};

static float EU863870_4F[14] = { 
119.35326,19.47621,
115.48607,9.96808,
118.25462,7.10011,
123.39623,4.03883,
132.14134,5.00261,
127.35130,19.55905,
119.35326,19.47621,

};

static float EU863870_5F[16] = { 
38.07794,32.50199,
33.77092,27.41328,
37.41739,19.05271,
42.39146,13.36321,
50.64630,17.50956,
56.62286,20.74750,
56.97442,25.35556,
38.07794,32.50199,

};

static float US902928_1F[32] = { 
-168.70273,73.32477,
-173.14487,55.59241,
-136.56896,-9.97563,
-73.01078,-60.51533,
-76.49889,-44.50321,
-70.88094,-17.08505,
-67.49103,-22.91785,
-57.68823,-19.31401,
-68.90764,4.40695,
-51.18327,5.64711,
-43.90450,53.55910,
-71.84486,72.12693,
-73.66926,78.90700,
-51.52817,84.26362,
-109.26311,84.50567,
-168.70273,73.32477,

};

static float AS923925_1F[12] = { 
114.06400,4.89831,
114.52543,3.95084,
115.46751,4.26588,
115.18186,5.06795,
114.73417,5.25396,
114.06400,4.89831,

};

static float AS923925_2F[14] = { 
111.72826,21.97293,
115.44164,19.27934,
122.73656,20.74515,
123.20570,26.19993,
121.80764,26.38139,
115.41967,23.93538,
111.72826,21.97293,

};

static float AS923925_3F[28] = { 
92.01692,5.86666,
103.00325,-10.41292,
120.58137,-11.62069,
128.31575,-9.54732,
139.56575,-9.72062,
141.32356,3.58943,
122.51497,3.76485,
117.76887,3.94023,
112.49518,1.39063,
108.40480,-0.48386,
104.45524,-0.25706,
98.09623,4.87675,
94.88327,7.30090,
92.01692,5.86666,

};

static float AS923925_4F[22] = { 
98.90643,12.75471,
97.08270,7.02099,
100.15887,6.43181,
106.24529,5.29523,
112.57342,9.93283,
110.90612,16.62593,
106.24529,23.34903,
101.60622,22.81417,
97.24373,19.18170,
98.00054,15.84301,
98.90643,12.75471,

};

static float US902928_2F[20] = { 
-67.49103,-22.91785,
-70.28316,-31.75017,
-71.60152,-45.96913,
-72.21675,-51.90602,
-66.76753,-55.44369,
-52.95398,-39.95226,
-47.43353,-33.89651,
-57.19000,-30.69796,
-57.68823,-19.31401,
-67.49103,-22.91785,

};

static float AU915928_1F[16] = { 
-68.90764,4.40695,
-57.68823,-19.31401,
-57.19000,-30.69796,
-52.26812,-32.34613,
-32.69593,-31.84013,
-29.76812,-6.07888,
-51.18327,5.64711,
-68.90764,4.40695,

};

static float AU915928_2F[16] = { 
-70.88094,-17.08505,
-76.49889,-44.50321,
-73.01078,-60.51533,
-66.76753,-55.44369,
-72.21675,-51.90602,
-70.28316,-31.75017,
-67.49103,-22.91785,
-70.88094,-17.08505,

};

static float CN470510_1F[32] = { 
82.29205,48.54875,
67.87798,37.82644,
82.86334,29.67296,
87.89547,26.80085,
96.70611,29.04099,
108.65923,20.43133,
110.80828,20.99835,
116.20393,24.16117,
121.31548,26.23843,
122.37017,36.70735,
136.08111,45.18528,
133.33570,48.85359,
120.61236,54.65108,
114.98736,49.69904,
98.11236,53.62131,
82.29205,48.54875,

};

static float IN865867_1F[16] = { 
72.96580,34.26699,
66.72556,23.19668,
75.16306,4.16647,
82.85421,2.39383,
85.70994,6.96542,
90.36814,21.24408,
87.89547,26.80085,
72.96580,34.26699,

};

static float AS920923_1F[16] = { 
139.68654,45.95900,
139.33497,45.52965,
133.77174,38.66725,
127.49247,32.03204,
131.95216,27.30372,
144.78419,33.95272,
150.49708,45.34464,
139.68654,45.95900,

};

static float KR920923_1F[12] = { 
122.94546,36.60046,
122.59912,32.47361,
127.43020,32.04833,
131.57778,36.55510,
130.19876,40.76658,
122.94546,36.60046,

};

static float AS920923_2F[30] = { 
97.26683,6.67666,
99.27305,3.85647,
102.22180,1.30487,
104.34551,-0.06553,
108.43935,-0.34457,
110.23070,0.67130,
114.97679,2.25276,
119.32738,4.70897,
116.95433,7.63591,
115.18186,5.06795,
115.46751,4.26588,
114.52543,3.95084,
114.06400,4.89831,
102.01292,5.97782,
97.26683,6.67666,

};

static float AU915928_3F[26] = { 
119.84993,-43.64813,
131.06762,-51.28254,
145.93096,-55.22234,
169.37107,-54.07644,
179.46983,-48.46908,
179.63306,-38.42140,
171.92924,-16.91222,
148.12775,-14.43550,
141.14083,-8.43254,
128.98378,-9.52913,
109.15307,-14.41378,
99.08073,-36.79314,
119.84993,-43.64813,

};



/* Defining the frequencies to transmit on. Currently holding dummy values
 * I think there has to be a list of frequencies instead, because it has 
 * to try all
 */

typedef enum
{
  EU863870    = 0x01,
  AU915928    = 0x02,
  US902928    = 0x03,
  KR920923    = 0x04,
	IN865867    = 0x05,
	AS920923		= 0x06,
	CN470510		= 0x07,
	AS923925		= 0x08,
	NONEFREQUENCY = 0x09
	
} LoRa_FREQUENCIES;


// VARIABLES
extern uint32_t GEOFENCE_LoRa_frequency; 
extern uint32_t GEOFENCE_no_tx;



// FUNCTIONS
int32_t pointInPolygon(int32_t polyCorners, int32_t * polygon, int32_t latitude, int32_t longitude);
int32_t pointInPolygonF(int32_t polyCorners, float * polygon, float latitude, float longitude);
void GEOFENCE_position(float latitude, float longitude);

void doit(void); // dummy function to force the compiler to compile all the polygons to see their memory footprint


#endif 
